rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a moderator
    function isModerator(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'moderateur';
    }

    // Users collection
    match /users/{userId} {
      // Authenticated users can read their own document
      // Moderators can read any user document
      allow read: if request.auth.uid == userId || isModerator(request.auth.uid);
      // Authenticated users can update their own document
      allow update: if request.auth.uid == userId;
      // Allow user creation (handled by Cloud Function)
      allow create: if request.auth.uid != null;
    }

    // Ads collection
    match /ads/{adId} {
      // Anyone can read approved ads
      allow read: if resource.data.status == 'approved' || 
                   (request.auth.uid != null && resource.data.userId == request.auth.uid) ||
                   (request.auth.uid != null && isModerator(request.auth.uid));
      // Authenticated users can create new ads
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      // Users can update their own ads
      // Moderators can update any ad
      allow update: if (request.auth.uid == resource.data.userId) || isModerator(request.auth.uid);
      // Moderators can delete ads
      allow delete: if isModerator(request.auth.uid);
    }
    
    // Support Chats collection
    match /supportChats/{userId} {
      allow read: if request.auth.uid == userId || isModerator(request.auth.uid);
      // Users can create/update their own support chat document
      allow write: if request.auth.uid == userId || isModerator(request.auth.uid);
      
      // Messages sub-collection
      match /messages/{messageId} {
        allow read, write: if request.auth.uid == userId || isModerator(request.auth.uid);
      }
    }
  }
}
